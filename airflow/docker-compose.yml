#need to fix the requirements.txt file to include the correct packages

version: '3'
networks:
  airflow_network:

services:
  postgres:
    image: postgres:13
    networks:
      - airflow_network
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres-data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  operations-db:
    image: postgres:13
    ports:
      - "5433:5432"  # expose container port 5432 on host 5433
    networks:
      - airflow_network
    environment:
      - POSTGRES_USER=operations_user
      - POSTGRES_PASSWORD=operations_password
      - POSTGRES_DB=operations
    volumes:
      - ./operations-db-init:/docker-entrypoint-initdb.d

  airflow-init:
      build: .
      #entrypoint: ["airflow", "db", "init"]
      networks:
        - airflow_network
      environment:
        - AIRFLOW__CORE__LOAD_EXAMPLES=False
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
        - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
      entrypoint: "bash -c 'airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname Admin --role Admin --email admin@example.com'"
      depends_on:
        postgres:
          condition: service_healthy

      volumes:
        - ./dags:/opt/airflow/dags
        - ./logs:/opt/airflow/logs
  

  airflow-webserver:
    build: .
    networks:
      - airflow_network
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    ports:
      - "8080:8080"
    command: "airflow webserver"

    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-scheduler:
    build: .
    networks:
      - airflow_network
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=

    command: "airflow scheduler"

    depends_on:
      airflow-webserver:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      
volumes:
  postgres-data:
  operations-db-data: